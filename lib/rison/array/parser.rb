#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Rison
  module Array
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 76)

attr_reader :source, :input

def initialize(source)
  @source = source
  @input = StringScanner.new(source)
end

def self.parse(source)
  self.new(source).do_parse
rescue Racc::ParseError => exn
  raise ParserError.new("#{exn.message} in #{source}")
end

def next_token
  case
  when input.eos?
    [false, false]
  when input.scan(/'/)
    [:QUOTE, input.matched]
  when input.scan(/\(/)
    [:LPAREN, input.matched]
  when input.scan(/\)/)
    [:RPAREN, input.matched]
  when input.scan(/:/)
    [:COLON, input.matched]
  when input.scan(/\./)
    [:DOT, input.matched]
  when input.scan(/\,/)
    [:COMMA, input.matched]
  when input.scan(/!/)
    [:EXCLAM, input.matched]
  when input.scan(/\-/)
    [:MINUS, input.matched]
  when input.scan(/e/)
    [:E, input.matched]
  when input.scan(/t/)
    [:T, input.matched]
  when input.scan(/f/)
    [:F, input.matched]
  when input.scan(/n/)
    [:N, input.matched]
  # Originally, 0 is not allowed at the beginning of the number, but rison.js accepts this.
  when input.scan(/[0-9]/)
    [:DIGIT, input.matched]
  # IDSTART and IDCHAR should originally accept only the ASCII symbols `-_./~`, but rison.js accepts other symbols.
  # @see https://rison.io/
  # @see https://github.com/Nanonid/rison/blob/e64af6c096fd30950ec32cfd48526ca6ee21649d/js/rison.js#L77-L84
  when input.scan(/[^\-0-9 '!:\(\),\*@\$]/)
    [:IDSTART, input.matched]
  when input.scan(/[^ '!:\(\),\*@\$]/)
    [:IDCHAR, input.matched]
  when input.scan(/[^\'\!]/)
    [:STRCHAR, input.matched]
  end
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    69,    36,    37,    38,    35,    34,    17,    18,    19,    26,
    28,    29,    15,    16,    20,    32,    25,    36,    37,    38,
    35,    34,    17,    18,    19,    26,    28,    29,    15,    16,
    20,    32,    45,     4,    57,    55,    65,     5,    17,    18,
    19,    64,    23,    22,    15,    16,    20,     2,     4,    77,
    59,    59,     5,    17,    18,    19,    82,    23,    22,    15,
    16,    20,    45,     4,    70,    24,    50,     5,    17,    18,
    19,    59,    23,    22,    15,    16,    20,    36,    37,    38,
    35,    34,    17,    18,    19,    26,    28,    29,    15,    16,
    20,    32,    45,    60,    39,    45,    61,   -38,    17,    18,
    19,    17,    18,    19,    15,    16,    20,    15,    16,    20,
    45,     4,    62,    66,    67,     5,    17,    18,    19,    68,
    23,    22,    15,    16,    20,    17,    18,    19,    26,    28,
    29,    15,    16,    20,    17,    18,    19,    26,    28,    29,
    15,    16,    20,    46,    57,    59,    59,   nil,    47,    48,
    49 ]

racc_action_check = [
    45,    45,    45,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,    50,    50,    21,    21,    34,    50,    50,    50,
    50,    34,    50,    50,    50,    50,    50,     0,     0,    57,
    59,    60,     0,     0,     0,     0,    71,     0,     0,     0,
     0,     0,    46,    46,    46,     1,     6,    46,    46,    46,
    46,    22,    46,    46,    46,    46,    46,    31,    31,    31,
    31,    31,    31,    31,    31,    31,    31,    31,    31,    31,
    31,    31,     4,    23,     4,    67,    24,    25,     4,     4,
     4,    67,    67,    67,     4,     4,     4,    67,    67,    67,
    68,    68,    30,    40,    41,    68,    68,    68,    68,    42,
    68,    68,    68,    68,    68,    52,    52,    52,    52,    52,
    52,    52,    52,    52,    14,    14,    14,    14,    14,    14,
    14,    14,    14,     5,    53,    55,    56,   nil,     5,     5,
     5 ]

racc_action_pointer = [
    45,    65,    14,   nil,    90,   140,    61,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   126,   nil,   nil,   nil,   nil,   nil,
   nil,    19,    58,    80,    96,    92,   nil,   nil,   nil,   nil,
   110,    74,   nil,   nil,    34,   nil,   nil,   nil,   nil,   nil,
   109,   109,   113,   nil,   nil,    -2,    60,   nil,   nil,   nil,
    30,   nil,   117,   129,   nil,   132,   133,    37,   nil,    37,
    38,   nil,   nil,   nil,   nil,   nil,   nil,    93,   108,   nil,
   nil,    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_action_default = [
   -64,   -64,   -64,    -2,   -64,   -64,   -10,   -14,   -15,   -16,
   -17,   -18,   -19,   -20,   -24,   -32,   -33,   -34,   -35,   -36,
   -37,   -50,   -54,   -64,   -64,    -1,   -28,   -29,   -30,   -31,
   -64,   -40,   -42,   -43,   -64,   -46,   -47,   -48,   -49,    -3,
   -64,    -5,   -64,   -12,   -13,   -64,   -64,   -21,   -22,   -23,
   -64,   -25,   -26,   -51,   -52,   -64,   -64,   -62,   -55,   -60,
   -56,    83,   -39,   -41,   -44,   -45,    -4,   -64,   -64,   -38,
    -8,   -64,   -11,   -27,   -53,   -58,   -59,   -63,   -61,   -57,
    -6,    -7,    -9 ]

racc_goto_table = [
    44,    40,    43,     3,    27,    58,    51,    52,    54,     1,
    63,    53,    81,   nil,   nil,   nil,    27,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,    75,    76,
    74,   nil,    78,    79,    73,    52,   nil,    27,   nil,    71,
   nil,   nil,   nil,    72,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    44,    80,    43 ]

racc_goto_check = [
    10,     4,     9,     2,    14,    22,    15,    16,    21,     1,
    17,    20,     7,   nil,   nil,   nil,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,    22,    22,
    21,   nil,    22,    22,    15,    16,   nil,    14,   nil,     2,
   nil,   nil,   nil,     2,    14,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    10,     4,     9 ]

racc_goto_pointer = [
   nil,     9,     3,   nil,    -3,   nil,   nil,   -56,   nil,    -2,
    -4,   nil,   nil,   nil,     2,    -8,    -7,   -21,   nil,   nil,
   -10,   -13,   -17,   nil ]

racc_goto_default = [
   nil,   nil,   nil,    10,   nil,    41,    42,     6,    11,     7,
     8,     9,    12,    13,    14,   nil,    33,    30,    31,    21,
   nil,   nil,   nil,    56 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 19, :_reduce_1,
  1, 19, :_reduce_none,
  2, 21, :_reduce_3,
  3, 21, :_reduce_4,
  1, 22, :_reduce_none,
  3, 22, :_reduce_6,
  3, 23, :_reduce_7,
  3, 26, :_reduce_8,
  4, 26, :_reduce_9,
  1, 20, :_reduce_10,
  3, 20, :_reduce_11,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  2, 30, :_reduce_21,
  2, 30, :_reduce_22,
  2, 31, :_reduce_23,
  1, 27, :_reduce_none,
  2, 27, :_reduce_25,
  1, 33, :_reduce_none,
  2, 33, :_reduce_27,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  2, 28, :_reduce_38,
  3, 28, :_reduce_39,
  1, 35, :_reduce_none,
  2, 35, :_reduce_41,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  2, 36, :_reduce_44,
  2, 36, :_reduce_45,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 29, :_reduce_50,
  2, 29, :_reduce_51,
  2, 29, :_reduce_52,
  3, 29, :_reduce_53,
  1, 37, :_reduce_54,
  2, 37, :_reduce_55,
  2, 37, :_reduce_56,
  3, 37, :_reduce_57,
  2, 38, :_reduce_58,
  2, 39, :_reduce_59,
  1, 40, :_reduce_none,
  2, 40, :_reduce_61,
  1, 41, :_reduce_62,
  2, 41, :_reduce_63 ]

racc_reduce_n = 64

racc_shift_n = 83

racc_token_table = {
  false => 0,
  :error => 1,
  :QUOTE => 2,
  :LPAREN => 3,
  :RPAREN => 4,
  :COMMA => 5,
  :COLON => 6,
  :EXCLAM => 7,
  :T => 8,
  :F => 9,
  :N => 10,
  :IDCHAR => 11,
  :MINUS => 12,
  :DIGIT => 13,
  :IDSTART => 14,
  :E => 15,
  :DOT => 16,
  :STRCHAR => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "QUOTE",
  "LPAREN",
  "RPAREN",
  "COMMA",
  "COLON",
  "EXCLAM",
  "T",
  "F",
  "N",
  "IDCHAR",
  "MINUS",
  "DIGIT",
  "IDSTART",
  "E",
  "DOT",
  "STRCHAR",
  "$start",
  "target",
  "elements",
  "object",
  "members",
  "pair",
  "key",
  "value",
  "array",
  "id",
  "string",
  "number",
  "bool",
  "null",
  "idstart",
  "idchars",
  "idchar",
  "strchars",
  "strchar",
  "int",
  "frac",
  "exp",
  "digits",
  "e" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 3)
  def _reduce_1(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_3(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_4(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_6(val, _values, result)
     result = val[0].merge(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_7(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_8(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_9(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_10(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_11(val, _values, result)
     result = val[2].unshift(val[0]) 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_21(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_22(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_23(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_25(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_27(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_38(val, _values, result)
     result = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_39(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_41(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_44(val, _values, result)
     result = '!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_45(val, _values, result)
     result = "'" 
    result
  end
.,.,

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_50(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_51(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_52(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_53(val, _values, result)
     result = "#{val[0]}#{val[1]}#{val[2]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_54(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_55(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_56(val, _values, result)
     result = "-#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_57(val, _values, result)
     result = "-#{val[1]}#{val[2]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_58(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_59(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_61(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_62(val, _values, result)
     result = 'e' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_63(val, _values, result)
     result = "e-" 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module Array
  end   # module Rison

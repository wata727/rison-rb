#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Rison
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 70)

class ParseError < Racc::ParseError; end

attr_reader :source, :input

def initialize(source)
  @source = source
  @input = StringScanner.new(source)
end

def self.parse(source)
  self.new(source).do_parse
rescue Racc::ParseError => exn
  raise ParseError.new(exn.message)
end

def next_token
  case
  when input.eos?
    [false, false]
  when input.scan(/!t\b/)
    [:BOOL, true]
  when input.scan(/!f\b/)
    [:BOOL, false]
  when input.scan(/!n\b/)
    [:NULL, nil]
  when input.scan(/'/)
    [:QUOTE, nil]
  when input.scan(/\(/)
    [:LPAREN, nil]
  when input.scan(/\)/)
    [:RPAREN, nil]
  when input.scan(/:/)
    [:COLON, input.matched]
  when input.scan(/\./)
    [:DOT, input.matched]
  when input.scan(/\,/)
    [:COMMA, input.matched]
  when input.scan(/!/)
    [:EXCLAM, input.matched]
  when input.scan(/\-/)
    [:MINUS, input.matched]
  when input.scan(/e/)
    [:NAPIER, input.matched]
  when input.scan(/[1-9]/)
    [:DIGIT19, input.matched]
  when input.scan(/[0-9]/)
    [:DIGIT, input.matched]
  when input.scan(/[a-zA-Z_\.\/~]/)
    [:IDSTART, input.matched]
  when input.scan(/[a-zA-Z_\.\/~\-0-9]/)
    [:IDCHAR, input.matched]
  when input.scan(/[^[:ascii:]]/)
    [:NONASCIICHAR, input.matched]
  when input.scan(/[^\'\!]/)
    [:STRCHAR, input.matched]
  end
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    49,    50,    22,     4,    10,    11,    63,    21,    19,
    20,    13,    14,    15,    16,    17,     3,    57,    64,    54,
     4,    10,    11,    53,    21,    19,    20,    13,    14,    15,
    16,    17,     3,    49,    50,    55,     4,    10,    11,    56,
    21,    19,    20,    13,    14,    15,    16,    17,     3,    49,
    50,    74,     4,    10,    11,    23,    21,    19,    20,    13,
    14,    15,    16,    17,    29,    13,    14,    15,    16,    17,
    42,    51,    52,    32,    34,    35,    36,    13,    14,    15,
    16,    42,    40,    61,    32,    34,    35,    36,    13,    14,
    15,    16,    37,    40,    32,    34,    35,    36,    13,    14,
    15,    16,    32,    34,    35,    36,    13,    14,    15,    16,
    13,    14,    15,    16,    17,    49,    50,    47,    45,    49,
    50,    49,    50,    47,    68,    75 ]

racc_action_check = [
     0,    49,    49,     1,     0,     0,     0,    42,     0,     0,
     0,     0,     0,     0,     0,     0,    29,    29,    42,    24,
    29,    29,    29,    22,    29,    29,    29,    29,    29,    29,
    29,    29,    56,    50,    50,    25,    56,    56,    56,    26,
    56,    56,    56,    56,    56,    56,    56,    56,    75,    52,
    52,    58,    75,    75,    75,     3,    75,    75,    75,    75,
    75,    75,    75,    75,     4,     3,     3,     3,     3,     3,
    39,    21,    21,    39,    39,    39,    39,    39,    39,    39,
    39,    17,    39,    38,    17,    17,    17,    17,    17,    17,
    17,    17,    17,    17,    12,    12,    12,    12,    12,    12,
    12,    12,    31,    31,    31,    31,    31,    31,    31,    31,
    55,    55,    55,    55,    55,    45,    45,    18,    18,    20,
    20,    46,    46,    43,    47,    59 ]

racc_action_pointer = [
    -2,     3,   nil,    52,    62,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    85,   nil,   nil,   nil,   nil,    75,   103,   nil,
   108,    60,    23,   nil,    16,    31,    34,   nil,   nil,    14,
   nil,    93,   nil,   nil,   nil,   nil,   nil,   nil,    66,    64,
   nil,   nil,     1,   109,   nil,   104,   110,   114,   nil,   -10,
    22,   nil,    38,   nil,   nil,    97,    30,   nil,    48,   121,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    46,   nil ]

racc_action_default = [
   -59,   -59,    -1,   -59,   -59,   -13,   -14,   -15,   -16,   -17,
   -18,   -19,   -20,   -29,   -30,   -31,   -32,   -59,   -41,   -45,
   -46,   -59,   -59,    -2,   -59,    -4,   -59,   -11,   -12,   -59,
   -21,   -22,   -24,   -25,   -26,   -27,   -28,   -33,   -59,   -35,
   -37,   -38,   -59,   -42,   -43,   -59,   -59,   -57,   -47,   -53,
   -55,   -48,   -49,    77,    -3,   -59,   -59,    -7,   -59,    -9,
   -23,   -34,   -36,   -39,   -40,   -44,   -51,   -52,   -58,   -54,
   -56,   -50,    -5,    -6,    -8,   -59,   -10 ]

racc_goto_table = [
     2,    24,    27,    28,    58,    48,    33,    44,    30,    43,
     1,    33,   nil,   nil,    41,   nil,    38,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    33,   nil,    60,   nil,   nil,
    66,    67,    65,    33,    69,    70,    41,    71,    62,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    76,   nil,   nil,    72,    27,    28,    73 ]

racc_goto_check = [
     2,     4,     9,    10,     8,    20,    12,    19,    13,    18,
     1,    12,   nil,   nil,    14,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,   nil,    13,   nil,   nil,
    20,    20,    19,    12,    20,    20,    14,    20,    15,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     8,   nil,   nil,     4,     9,    10,     2 ]

racc_goto_pointer = [
   nil,    10,     0,   nil,    -2,   nil,   nil,   nil,   -25,    -1,
     0,   nil,    -6,    -4,    -3,    -1,   nil,   nil,    -9,   -11,
   -15,   nil ]

racc_goto_default = [
   nil,   nil,    59,     8,   nil,    25,    26,     9,   nil,     5,
     6,     7,    12,   nil,    31,   nil,    39,    18,   nil,   nil,
   nil,    46 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 20, :_reduce_none,
  2, 22, :_reduce_2,
  3, 22, :_reduce_3,
  1, 23, :_reduce_none,
  3, 23, :_reduce_5,
  3, 24, :_reduce_6,
  3, 26, :_reduce_7,
  4, 26, :_reduce_8,
  1, 27, :_reduce_9,
  3, 27, :_reduce_10,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 28, :_reduce_none,
  2, 28, :_reduce_21,
  1, 32, :_reduce_none,
  2, 32, :_reduce_23,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  2, 29, :_reduce_33,
  3, 29, :_reduce_34,
  1, 34, :_reduce_none,
  2, 34, :_reduce_36,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  2, 35, :_reduce_39,
  2, 35, :_reduce_40,
  1, 30, :_reduce_41,
  2, 30, :_reduce_42,
  2, 30, :_reduce_43,
  3, 30, :_reduce_44,
  1, 36, :_reduce_45,
  1, 36, :_reduce_46,
  2, 36, :_reduce_47,
  2, 36, :_reduce_48,
  2, 36, :_reduce_49,
  3, 36, :_reduce_50,
  2, 37, :_reduce_51,
  2, 38, :_reduce_52,
  1, 39, :_reduce_none,
  2, 39, :_reduce_54,
  1, 39, :_reduce_none,
  2, 39, :_reduce_56,
  1, 40, :_reduce_57,
  2, 40, :_reduce_58 ]

racc_reduce_n = 59

racc_shift_n = 77

racc_token_table = {
  false => 0,
  :error => 1,
  :LPAREN => 2,
  :RPAREN => 3,
  :COMMA => 4,
  :COLON => 5,
  :EXCLAM => 6,
  :BOOL => 7,
  :NULL => 8,
  :IDCHAR => 9,
  :MINUS => 10,
  :DIGIT => 11,
  :DIGIT19 => 12,
  :IDSTART => 13,
  :NAPIER => 14,
  :DOT => 15,
  :NONASCIICHAR => 16,
  :QUOTE => 17,
  :STRCHAR => 18 }

racc_nt_base = 19

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LPAREN",
  "RPAREN",
  "COMMA",
  "COLON",
  "EXCLAM",
  "BOOL",
  "NULL",
  "IDCHAR",
  "MINUS",
  "DIGIT",
  "DIGIT19",
  "IDSTART",
  "NAPIER",
  "DOT",
  "NONASCIICHAR",
  "QUOTE",
  "STRCHAR",
  "$start",
  "target",
  "value",
  "object",
  "members",
  "pair",
  "key",
  "array",
  "elements",
  "id",
  "string",
  "number",
  "idstart",
  "idchars",
  "idchar",
  "strchars",
  "strchar",
  "int",
  "frac",
  "exp",
  "digits",
  "e" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_2(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_3(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_5(val, _values, result)
     result = val[0].merge(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_6(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_7(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_8(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_9(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_10(val, _values, result)
     result = val[2].unshift(val[0]) 
    result
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_21(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_23(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_33(val, _values, result)
     result = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_34(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_36(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_39(val, _values, result)
     result = '!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_40(val, _values, result)
     result = "'" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_41(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_42(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_43(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_44(val, _values, result)
     result = "#{val[0]}#{val[1]}#{val[2]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_45(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_46(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_47(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_48(val, _values, result)
     result = "-#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_49(val, _values, result)
     result = "-#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_50(val, _values, result)
     result = "-#{val[1]}#{val[2]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_51(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_52(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_54(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_56(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_57(val, _values, result)
     result = 'e' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_58(val, _values, result)
     result = "e-" 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rison

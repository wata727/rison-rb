#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Rison
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 66)

class ParseError < Racc::ParseError; end

attr_reader :source, :input

def initialize(source)
  @source = source
  @input = StringScanner.new(source)
end

def self.parse(source)
  self.new(source).do_parse
rescue Racc::ParseError => exn
  raise ParseError.new(exn.message)
end

def next_token
  case
  when input.eos?
    [false, false]
  when input.scan(/!t\b/)
    [:BOOL, true]
  when input.scan(/!f\b/)
    [:BOOL, false]
  when input.scan(/!n\b/)
    [:NULL, nil]
  when input.scan(/'/)
    [:QUOTE, nil]
  when input.scan(/\(/)
    [:LPAREN, nil]
  when input.scan(/\)/)
    [:RPAREN, nil]
  when input.scan(/:/)
    [:COLON, input.matched]
  when input.scan(/\./)
    [:DOT, input.matched]
  when input.scan(/\,/)
    [:COMMA, input.matched]
  when input.scan(/!/)
    [:EXCLAM, input.matched]
  when input.scan(/\-/)
    [:MINUS, input.matched]
  when input.scan(/e/)
    [:NAPIER, input.matched]
  # Originally, 0 is not allowed at the beginning of the number, but rison.js accepts this.
  when input.scan(/[0-9]/)
    [:DIGIT, input.matched]
  # IDSTART and IDCHAR should originally accept only the ASCII symbols `-_./~`, but rison.js accepts other symbols.
  # @see https://rison.io/
  # @see https://github.com/Nanonid/rison/blob/e64af6c096fd30950ec32cfd48526ca6ee21649d/js/rison.js#L77-L84
  when input.scan(/[^\-0-9 '!:\(\),\*@¥\$]/)
    [:IDSTART, input.matched]
  when input.scan(/[^ '!:\(\),\*@¥\$]/)
    [:IDCHAR, input.matched]
  when input.scan(/[^\'\!]/)
    [:STRCHAR, input.matched]
  end
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    44,    42,    51,     4,    10,    11,    58,    19,    18,
    13,    14,    15,    16,     3,    52,    59,    68,     4,    10,
    11,    27,    19,    18,    13,    14,    15,    16,     3,    56,
    47,    46,     4,    10,    11,    44,    19,    18,    13,    14,
    15,    16,     3,    46,    46,    63,     4,    10,    11,    21,
    19,    18,    13,    14,    15,    16,    46,    46,    13,    14,
    15,    16,    39,    69,    20,    30,    32,    33,    13,    14,
    15,    39,    37,    49,    30,    32,    33,    13,    14,    15,
    34,    37,    30,    32,    33,    13,    14,    15,    30,    32,
    33,    13,    14,    15,    13,    14,    15,    16,    48,    50 ]

racc_action_check = [
     0,    17,    17,    24,     0,     0,     0,    39,     0,     0,
     0,     0,     0,     0,    27,    27,    39,    53,    27,    27,
    27,     4,    27,    27,    27,    27,    27,    27,    51,    35,
    19,    18,    51,    51,    51,    40,    51,    51,    51,    51,
    51,    51,    69,    42,    43,    44,    69,    69,    69,     3,
    69,    69,    69,    69,    69,    69,    46,    47,     3,     3,
     3,     3,    36,    54,     1,    36,    36,    36,    36,    36,
    36,    16,    36,    22,    16,    16,    16,    16,    16,    16,
    16,    16,    12,    12,    12,    12,    12,    12,    29,    29,
    29,    29,    29,    29,    50,    50,    50,    50,    20,    23 ]

racc_action_pointer = [
    -2,    64,   nil,    46,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    73,   nil,   nil,   nil,    65,   -12,    20,    19,
    98,   nil,    70,    95,    -2,   nil,   nil,    12,   nil,    79,
   nil,   nil,   nil,   nil,   nil,    14,    56,   nil,   nil,     1,
    22,   nil,    32,    33,    35,   nil,    45,    46,   nil,   nil,
    82,    26,   nil,    14,    59,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,
   nil ]

racc_action_default = [
   -53,   -53,    -1,   -53,   -53,   -13,   -14,   -15,   -16,   -17,
   -18,   -19,   -20,   -28,   -29,   -30,   -53,   -39,   -43,   -53,
   -53,    -2,   -53,    -4,   -53,   -11,   -12,   -53,   -21,   -22,
   -24,   -25,   -26,   -27,   -31,   -53,   -33,   -35,   -36,   -53,
   -40,   -41,   -53,   -53,   -51,   -44,   -49,   -45,    71,    -3,
   -53,   -53,    -7,   -53,    -9,   -23,   -32,   -34,   -37,   -38,
   -42,   -47,   -48,   -52,   -50,   -46,    -5,    -6,    -8,   -53,
   -10 ]

racc_goto_table = [
     2,    22,    25,    26,    53,    45,    38,    31,    35,    41,
    28,    31,    40,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31,   nil,    38,    55,    57,    61,
    62,    31,    60,    64,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    70,   nil,    66,    25,
    26,    67 ]

racc_goto_check = [
     2,     4,     9,    10,     8,    20,    14,    12,    15,    19,
    13,    12,    18,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    12,   nil,    14,    13,    15,    20,
    20,    12,    19,    20,    20,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,     4,     9,
    10,     2 ]

racc_goto_pointer = [
   nil,    13,     0,   nil,    -2,   nil,   nil,   nil,   -23,    -1,
     0,   nil,    -5,    -2,   -10,    -8,   nil,   nil,    -5,    -8,
   -13,   nil ]

racc_goto_default = [
   nil,   nil,    54,     8,   nil,    23,    24,     9,   nil,     5,
     6,     7,    12,   nil,    29,   nil,    36,    17,   nil,   nil,
   nil,    43 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 18, :_reduce_none,
  2, 20, :_reduce_2,
  3, 20, :_reduce_3,
  1, 21, :_reduce_none,
  3, 21, :_reduce_5,
  3, 22, :_reduce_6,
  3, 24, :_reduce_7,
  4, 24, :_reduce_8,
  1, 25, :_reduce_9,
  3, 25, :_reduce_10,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 26, :_reduce_none,
  2, 26, :_reduce_21,
  1, 30, :_reduce_none,
  2, 30, :_reduce_23,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  2, 27, :_reduce_31,
  3, 27, :_reduce_32,
  1, 32, :_reduce_none,
  2, 32, :_reduce_34,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  2, 33, :_reduce_37,
  2, 33, :_reduce_38,
  1, 28, :_reduce_39,
  2, 28, :_reduce_40,
  2, 28, :_reduce_41,
  3, 28, :_reduce_42,
  1, 34, :_reduce_43,
  2, 34, :_reduce_44,
  2, 34, :_reduce_45,
  3, 34, :_reduce_46,
  2, 35, :_reduce_47,
  2, 36, :_reduce_48,
  1, 37, :_reduce_none,
  2, 37, :_reduce_50,
  1, 38, :_reduce_51,
  2, 38, :_reduce_52 ]

racc_reduce_n = 53

racc_shift_n = 71

racc_token_table = {
  false => 0,
  :error => 1,
  :LPAREN => 2,
  :RPAREN => 3,
  :COMMA => 4,
  :COLON => 5,
  :EXCLAM => 6,
  :BOOL => 7,
  :NULL => 8,
  :IDCHAR => 9,
  :MINUS => 10,
  :DIGIT => 11,
  :IDSTART => 12,
  :NAPIER => 13,
  :DOT => 14,
  :QUOTE => 15,
  :STRCHAR => 16 }

racc_nt_base = 17

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LPAREN",
  "RPAREN",
  "COMMA",
  "COLON",
  "EXCLAM",
  "BOOL",
  "NULL",
  "IDCHAR",
  "MINUS",
  "DIGIT",
  "IDSTART",
  "NAPIER",
  "DOT",
  "QUOTE",
  "STRCHAR",
  "$start",
  "target",
  "value",
  "object",
  "members",
  "pair",
  "key",
  "array",
  "elements",
  "id",
  "string",
  "number",
  "idstart",
  "idchars",
  "idchar",
  "strchars",
  "strchar",
  "int",
  "frac",
  "exp",
  "digits",
  "e" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_2(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_3(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_5(val, _values, result)
     result = val[0].merge(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_6(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_7(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_8(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_9(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_10(val, _values, result)
     result = val[2].unshift(val[0]) 
    result
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_21(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_23(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_31(val, _values, result)
     result = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_32(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_34(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_37(val, _values, result)
     result = '!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_38(val, _values, result)
     result = "'" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_39(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_40(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_41(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_42(val, _values, result)
     result = "#{val[0]}#{val[1]}#{val[2]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_43(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_44(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_45(val, _values, result)
     result = "-#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_46(val, _values, result)
     result = "-#{val[1]}#{val[2]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_47(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_48(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_50(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_51(val, _values, result)
     result = 'e' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_52(val, _values, result)
     result = "e-" 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rison

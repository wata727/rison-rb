#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Rison
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 75)

attr_reader :source, :input

def initialize(source)
  @source = source
  @input = StringScanner.new(source)
end

def self.parse(source)
  self.new(source).do_parse
rescue Racc::ParseError => exn
  raise ParserError.new("#{exn.message} in #{source}")
end

def next_token
  case
  when input.eos?
    [false, false]
  when input.scan(/'/)
    [:QUOTE, input.matched]
  when input.scan(/\(/)
    [:LPAREN, input.matched]
  when input.scan(/\)/)
    [:RPAREN, input.matched]
  when input.scan(/:/)
    [:COLON, input.matched]
  when input.scan(/\./)
    [:DOT, input.matched]
  when input.scan(/\,/)
    [:COMMA, input.matched]
  when input.scan(/!/)
    [:EXCLAM, input.matched]
  when input.scan(/\-/)
    [:MINUS, input.matched]
  when input.scan(/e/)
    [:E, input.matched]
  when input.scan(/t/)
    [:T, input.matched]
  when input.scan(/f/)
    [:F, input.matched]
  when input.scan(/n/)
    [:N, input.matched]
  # Originally, 0 is not allowed at the beginning of the number, but rison.js accepts this.
  when input.scan(/[0-9]/)
    [:DIGIT, input.matched]
  # IDSTART and IDCHAR should originally accept only the ASCII symbols `-_./~`, but rison.js accepts other symbols.
  # @see https://rison.io/
  # @see https://github.com/Nanonid/rison/blob/e64af6c096fd30950ec32cfd48526ca6ee21649d/js/rison.js#L77-L84
  when input.scan(/[^\-0-9 '!:\(\),\*@\$]/)
    [:IDSTART, input.matched]
  when input.scan(/[^ '!:\(\),\*@\$]/)
    [:IDCHAR, input.matched]
  when input.scan(/[^\'\!]/)
    [:STRCHAR, input.matched]
  end
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    47,    48,    49,    46,    45,    15,    16,    17,    36,    38,
    39,    13,    14,    18,    40,    43,    47,    48,    49,    46,
    45,    15,    16,    17,    36,    38,    39,    13,    14,    18,
     3,    43,    54,    52,     4,    15,    16,    17,    68,    22,
    21,    13,    14,    18,    19,     3,    62,    78,    69,     4,
    15,    16,    17,    66,    22,    21,    13,    14,    18,    19,
     3,    23,    54,    56,     4,    15,    16,    17,    56,    22,
    21,    13,    14,    18,    19,     3,    73,    56,    56,     4,
    15,    16,    17,    79,    22,    21,    13,    14,    18,    19,
    24,    57,    30,    56,    15,    16,    17,    31,    32,    33,
    13,    14,    18,    19,    15,    16,    17,    58,    59,    60,
    13,    14,    18,    19,    15,    16,    17,    36,    38,    39,
    13,    14,    18,    15,    16,    17,    36,    38,    39,    13,
    14,    18,    61 ]

racc_action_check = [
    19,    19,    19,    19,    19,    19,    19,    19,    19,    19,
    19,    19,    19,    19,    19,    19,    42,    42,    42,    42,
    42,    42,    42,    42,    42,    42,    42,    42,    42,    42,
     0,    42,    20,    20,     0,     0,     0,     0,    45,     0,
     0,     0,     0,     0,     0,    30,    30,    63,    45,    30,
    30,    30,    30,    41,    30,    30,    30,    30,    30,    30,
    61,     1,    50,    52,    61,    61,    61,    61,    53,    61,
    61,    61,    61,    61,    61,    79,    54,    56,    57,    79,
    79,    79,    79,    64,    79,    79,    79,    79,    79,    79,
     3,    22,     4,    21,     3,     3,     3,     4,     4,     4,
     3,     3,     3,     3,    60,    60,    60,    23,    25,    26,
    60,    60,    60,    60,    35,    35,    35,    35,    35,    35,
    35,    35,    35,    12,    12,    12,    12,    12,    12,    12,
    12,    12,    27 ]

racc_action_pointer = [
    28,    61,   nil,    87,    90,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   116,   nil,   nil,   nil,   nil,   nil,   nil,    -2,
    18,    81,    79,   107,   nil,   105,   105,   127,   nil,   nil,
    43,   nil,   nil,   nil,   nil,   107,   nil,   nil,   nil,   nil,
   nil,    37,    14,   nil,   nil,    32,   nil,   nil,   nil,   nil,
    48,   nil,    51,    56,    65,   nil,    65,    66,   nil,   nil,
    97,    58,   nil,    44,    79,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    73,
   nil ]

racc_action_default = [
   -63,   -63,    -1,   -63,   -63,   -13,   -14,   -15,   -16,   -17,
   -18,   -19,   -23,   -31,   -32,   -33,   -34,   -35,   -36,   -63,
   -49,   -53,   -63,   -63,    -2,   -63,    -4,   -63,   -11,   -12,
   -63,   -20,   -21,   -22,   -24,   -25,   -27,   -28,   -29,   -30,
   -37,   -63,   -39,   -41,   -42,   -63,   -45,   -46,   -47,   -48,
   -50,   -51,   -63,   -63,   -61,   -54,   -59,   -55,    81,    -3,
   -63,   -63,    -7,   -63,    -9,   -26,   -38,   -40,   -43,   -44,
   -52,   -57,   -58,   -62,   -60,   -56,    -5,    -6,    -8,   -63,
   -10 ]

racc_goto_table = [
     2,    25,    28,    29,    63,    55,    44,    41,    37,    51,
    34,    50,     1,   nil,   nil,    37,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    44,
    67,    37,   nil,    65,   nil,   nil,    71,    72,    37,    70,
    74,    75,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    80,   nil,   nil,   nil,   nil,    76,    28,
    29,    77 ]

racc_goto_check = [
     2,     4,     9,    10,     8,    22,    16,    17,    14,    21,
    15,    20,     1,   nil,   nil,    14,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
    17,    14,   nil,    15,   nil,   nil,    22,    22,    14,    21,
    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,     4,     9,
    10,     2 ]

racc_goto_pointer = [
   nil,    12,     0,   nil,    -2,   nil,   nil,   nil,   -26,    -1,
     0,   nil,   nil,   nil,    -4,    -2,   -13,   -12,   nil,   nil,
    -9,   -11,   -16,   nil ]

racc_goto_default = [
   nil,   nil,    64,     8,   nil,    26,    27,     9,   nil,     5,
     6,     7,    10,    11,    12,   nil,    35,   nil,    42,    20,
   nil,   nil,   nil,    53 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_none,
  2, 21, :_reduce_2,
  3, 21, :_reduce_3,
  1, 22, :_reduce_none,
  3, 22, :_reduce_5,
  3, 23, :_reduce_6,
  3, 25, :_reduce_7,
  4, 25, :_reduce_8,
  1, 26, :_reduce_9,
  3, 26, :_reduce_10,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  2, 30, :_reduce_20,
  2, 30, :_reduce_21,
  2, 31, :_reduce_22,
  1, 27, :_reduce_none,
  2, 27, :_reduce_24,
  1, 33, :_reduce_none,
  2, 33, :_reduce_26,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  2, 28, :_reduce_37,
  3, 28, :_reduce_38,
  1, 35, :_reduce_none,
  2, 35, :_reduce_40,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  2, 36, :_reduce_43,
  2, 36, :_reduce_44,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 29, :_reduce_49,
  2, 29, :_reduce_50,
  2, 29, :_reduce_51,
  3, 29, :_reduce_52,
  1, 37, :_reduce_53,
  2, 37, :_reduce_54,
  2, 37, :_reduce_55,
  3, 37, :_reduce_56,
  2, 38, :_reduce_57,
  2, 39, :_reduce_58,
  1, 40, :_reduce_none,
  2, 40, :_reduce_60,
  1, 41, :_reduce_61,
  2, 41, :_reduce_62 ]

racc_reduce_n = 63

racc_shift_n = 81

racc_token_table = {
  false => 0,
  :error => 1,
  :LPAREN => 2,
  :RPAREN => 3,
  :COMMA => 4,
  :COLON => 5,
  :EXCLAM => 6,
  :T => 7,
  :F => 8,
  :N => 9,
  :IDCHAR => 10,
  :MINUS => 11,
  :DIGIT => 12,
  :IDSTART => 13,
  :E => 14,
  :DOT => 15,
  :QUOTE => 16,
  :STRCHAR => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LPAREN",
  "RPAREN",
  "COMMA",
  "COLON",
  "EXCLAM",
  "T",
  "F",
  "N",
  "IDCHAR",
  "MINUS",
  "DIGIT",
  "IDSTART",
  "E",
  "DOT",
  "QUOTE",
  "STRCHAR",
  "$start",
  "target",
  "value",
  "object",
  "members",
  "pair",
  "key",
  "array",
  "elements",
  "id",
  "string",
  "number",
  "bool",
  "null",
  "idstart",
  "idchars",
  "idchar",
  "strchars",
  "strchar",
  "int",
  "frac",
  "exp",
  "digits",
  "e" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_2(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_3(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_5(val, _values, result)
     result = val[0].merge(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_6(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_7(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_8(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_9(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_10(val, _values, result)
     result = val[2].unshift(val[0]) 
    result
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_20(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_21(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_22(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_24(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_26(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_37(val, _values, result)
     result = '' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_38(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_40(val, _values, result)
     result = val[0] + val[1] 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_43(val, _values, result)
     result = '!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_44(val, _values, result)
     result = "'" 
    result
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_49(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_50(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_51(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_52(val, _values, result)
     result = "#{val[0]}#{val[1]}#{val[2]}".to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_53(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_54(val, _values, result)
     result = "#{val[0]}#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_55(val, _values, result)
     result = "-#{val[1]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_56(val, _values, result)
     result = "-#{val[1]}#{val[2]}".to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_57(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_58(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_60(val, _values, result)
     result = "#{val[0]}#{val[1]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_61(val, _values, result)
     result = 'e' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_62(val, _values, result)
     result = "e-" 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rison
